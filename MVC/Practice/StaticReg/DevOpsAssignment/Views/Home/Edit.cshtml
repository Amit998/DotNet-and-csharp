@model DevOpsAssignment.Models.StudentModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Edit</h1>

<h4>StudentModel</h4>
<hr />
<div class="row">
    <div class="col-md-8">
        @using (Html.BeginForm("Edit", "Home", FormMethod.Post))
        {

            <h3>Registration</h3>
            <form class="form-horizontal">


                <div class="form-group">
                    

                    <div class="col-md-12">
               
                        <div class="input-group">


                            @Html.HiddenFor(model => model.StudnetId, new { htmlAttributes = new { @class = "form-control" } })


                        </div>
                        @Html.ValidationMessageFor(model => model.StudnetId, "", new { @class = "text-danger" })

                    </div>
                </div>



                <div class="form-group">
                    @*@Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })*@

                    <div class="col-md-12">
                        <label for="exampleInputName">Student Name</label>
                        <div class="input-group">


                            @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control" } })


                        </div>
                        @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })*@

                    <div class="col-md-12">
                        <label for="exampleInputRoll">Student Roll</label>

                        <div class="input-group">


                            @Html.EditorFor(model => model.StudentRoll, new { htmlAttributes = new { @class = "form-control" } })


                        </div>
                        @Html.ValidationMessageFor(model => model.StudentRoll, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="form-group">


                    <div class="col-md-12">
                        <label for="exampleInputEmail1">Student Email</label>
                        <div class="input-group">


                            @Html.EditorFor(model => model.StudentEmail, new { htmlAttributes = new { @class = "form-control" } })


                        </div>
                        @Html.ValidationMessageFor(model => model.StudentEmail, "", new { @class = "text-danger" })

                    </div>
                </div>


                <div class="form-group">


                    <div class="col-md-12">
                        <label for="exampleInputBatch">Student Batch</label>
                        <div class="input-group">


                            @Html.EditorFor(model => model.StudentBatch, new { htmlAttributes = new { @class = "form-control" } })


                        </div>
                        @Html.ValidationMessageFor(model => model.StudentBatch, "", new { @class = "text-danger" })

                    </div>
                </div>


                <div class="form-group">


                    <div class="col-md-12">
                        <label for="exampleInputCourse">Student Course</label>

                        <div class="input-group">
                            @Html.EditorFor(model => model.StudentCourse, new { htmlAttributes = new { @class = "form-control" } })


                        </div>
                        @Html.ValidationMessageFor(model => model.StudentCourse, "", new { @class = "text-danger " })

                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-5 col-md-3">
                        <input type="submit" class="btn btn-primary" value="Edit" />
                    </div>
                </div>
            </form>

        }
    </div>
</div>

